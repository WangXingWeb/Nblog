(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{419:function(t,a,s){"use strict";s.r(a);var n=s(15),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"网络加载方面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络加载方面"}},[t._v("#")]),t._v(" 网络加载方面")]),t._v(" "),a("h3",{attrs:{id:"减少-http-资源请求次数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少-http-资源请求次数"}},[t._v("#")]),t._v(" 减少 HTTP 资源请求次数")]),t._v(" "),a("ol",[a("li",[t._v("合并 JS 文件和 CSS 文件。")]),t._v(" "),a("li",[t._v("雪碧图，合并框架图片及相对变动较少的图片或成一张，通过 CSS 背景切割来完成渲染。")]),t._v(" "),a("li",[t._v("合理使用本地 Cache 来缓存 JS/CSS/IMAGE，已经缓存过的文件就不要发起 http 请求了。")])]),t._v(" "),a("h3",{attrs:{id:"减少-http-请求大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少-http-请求大小"}},[t._v("#")]),t._v(" 减少 HTTP 请求大小")]),t._v(" "),a("p",[t._v("除了减少 HTTP 资源请求次数，也要尽量减少每个 HTTP 请求的大小，")]),t._v(" "),a("ol",[a("li",[t._v("减少没必要的图片、JavaScript、CSS 及 HTML 代码。")]),t._v(" "),a("li",[t._v("对文件进行压缩优化缩短网络传输等待时延，")]),t._v(" "),a("li",[t._v("使用构建工具来压缩静态图片资源以及移除代码中的注释并压缩，")]),t._v(" "),a("li",[t._v("上传图片前先压缩缩小图片体积")])]),t._v(" "),a("h3",{attrs:{id:"避免页面中空的-href-和-src"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免页面中空的-href-和-src"}},[t._v("#")]),t._v(" 避免页面中空的 href 和 src")]),t._v(" "),a("p",[t._v("当"),a("code",[t._v("<link>")]),t._v("标签的"),a("code",[t._v("href")]),t._v("属性为空，或"),a("code",[t._v("<script>")]),t._v("、"),a("code",[t._v("<img>")]),t._v("、"),a("code",[t._v("<iframe>")]),t._v("标签的 src 属性为空时，浏览器在渲染过程中仍会将"),a("code",[t._v("href")]),t._v("属性或者"),a("code",[t._v("src")]),t._v("属性中的空内容进行加载，直至加载失败，这样就阻塞了页面中其他资源的下载进程，而且最终加载到的内容是无效的，因此要尽量避免。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--不推荐--\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("alt")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("photo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("点击链接"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"图片懒加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片懒加载"}},[t._v("#")]),t._v(" 图片懒加载：")]),t._v(" "),a("p",[t._v("为了保证页面内容的最小化，加速页面的渲染，尽可能节省移动端网络流量，页面中的图片资源推荐使用懒加载实现，在页面滚动时动态载入图片；")]),t._v(" "),a("h3",{attrs:{id:"把-js-文件移到-html-文件末尾-css-文件移到顶端。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把-js-文件移到-html-文件末尾-css-文件移到顶端。"}},[t._v("#")]),t._v(" 把 js 文件移到 HTMl 文件末尾，css 文件移到顶端。")]),t._v(" "),a("p",[t._v("因为 JavaScript 在处理的过程中会阻塞后面的页面显示，并且也会使 HTML 请求被阻止。\nCSS 放到最顶部，浏览器能够有针对性的对 HTML 页面从顶到下进行解析和渲染。")]),t._v(" "),a("h3",{attrs:{id:"网址后加斜杠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网址后加斜杠"}},[t._v("#")]),t._v(" 网址后加斜杠")]),t._v(" "),a("p",[t._v("有些网址，比如"),a("code",[t._v("www.iwangxing.cn/manjuan")]),t._v("，当服务器收到这样一个地址，需要时间去确定这个地址的文件类型。如果"),a("code",[t._v("manjuan")]),t._v("是一个目录，则不妨在网址后多加一个斜杠，让其变成"),a("code",[t._v("www.iwangxing.cn/manjuan/")]),t._v("，这样服务器就一目了然地知道要访问该目录下的"),a("code",[t._v("index")]),t._v("或"),a("code",[t._v("default")]),t._v("文件，从而节省加载时间。")]),t._v(" "),a("h3",{attrs:{id:"图片尽量标明高度和宽度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片尽量标明高度和宽度"}},[t._v("#")]),t._v(" 图片尽量标明高度和宽度")]),t._v(" "),a("p",[t._v("如果没有设置，则浏览器一边下载图片一边计算大小，如果图片很多，则浏览器就需要不断地调整页面，这不但影响速度，也影响浏览体验。当浏览器知道了高度和宽度后，即使图片无法显示，页面上也会腾出图片的空位，然后继续加载后面的内容。从而加载快了，浏览体验也更好了。")]),t._v(" "),a("h2",{attrs:{id:"非核心代码异步加载异步加载的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非核心代码异步加载异步加载的方式"}},[t._v("#")]),t._v(" 非核心代码异步加载异步加载的方式")]),t._v(" "),a("p",[t._v("异步加载的三种方式——async 和 defer、动态脚本创建。")]),t._v(" "),a("ol",[a("li",[t._v("async 方式\nasync 属性是 HTML5 新增属性，需要 Chrome、FireFox、IE9+浏览器支持\nasync 属性规定一旦脚本可用，则会异步执行\nasync 属性仅适用于外部脚本\n如果是多个脚本，该方法不能保证脚本按顺序执行")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("xxx.js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("async")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}}),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("defer 方式\n兼容所有浏览器\ndefer 属性规定是否对脚本执行进行延迟，直到页面加载为止\n如果是多个脚本，该方法可以确保所有设置了 defer 属性的脚本按顺序执行\n如果脚本不会改变文档的内容，可将 defer 属性加入到 script 标签中，以便加快处理文档的速度")])]),t._v(" "),a("li",[a("p",[t._v("动态创建 script 标签\n在还没定义 defer 和 async 前，异步加载的方式是动态创建 script，通过 window.onload 方法确保页面加载完毕再将 script 标签插入到 DOM 中,具体代码如下：")])])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addScriptTag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" script "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/javascript'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" src\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addScriptTag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'js/index.js'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("异步加载的区别\ndefer 是在 HTML 解析完之后才会执行，如果是多个，按照加载的顺序依次执行\nasync 是在加载完之后立即执行，如果是多个，执行顺序和加载顺序无关")]),t._v(" "),a("h2",{attrs:{id:"利用浏览器缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用浏览器缓存"}},[t._v("#")]),t._v(" 利用浏览器缓存")]),t._v(" "),a("p",[t._v("除了上面所说的 Cache-Control、Expires、Etag 和 Last-Modified 来设置 HTTP 缓存外，在移动端还可以使用 localStorage 等来保存 AJAX 返回的数据，或者使用 localStorage 保存 CSS 或 JavaScript 静态资源内容，实现移动端的离线应用，尽可能减少网络请求，保证静态资源内容的快速加载；")]),t._v(" "),a("h2",{attrs:{id:"使用-cdn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-cdn"}},[t._v("#")]),t._v(" 使用 CDN")]),t._v(" "),a("p",[t._v("大型 Web 应用对速度的追求并没有止步于仅仅利用浏览器缓存，因为浏览器缓存始终只是为了提升二次访问的速度，对于首次访问的加速，我们需要从网络层面进行优化，最常见的手段就是 CDN（Content Delivery Network，内容分发网络）加速。通过将静态资源(例如 javascript，css，图片等等）缓存到离用户很近的相同网络运营商的 CDN 节点上，不但能提升用户的访问速度，还能节省服务器的带宽消耗，降低负载。")]),t._v(" "),a("p",[t._v("CDN 是怎么做到加速的呢？\n其实这是 CDN 服务商在全国各个省份部署计算节点，CDN 加速将网站的内容缓存在网络边缘,不同地区的用户就会访问到离自己最近的相同网络线路上的 CDN 节点，当请求达到 CDN 节点后，节点会判断自己的内容缓存是否有效，如果有效，则立即响应缓存内容给用户，从而加快响应速度。如果 CDN 节点的缓存失效，它会根据服务配置去我们的内容源服务器获取最新的资源响应给用户，并将内容缓存下来以便响应给后续访问的用户。因此，一个地区内只要有一个用户先加载资源，在 CDN 中建立了缓存，该地区的其他后续用户都能因此而受益。")]),t._v(" "),a("h2",{attrs:{id:"预解析-dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预解析-dns"}},[t._v("#")]),t._v(" 预解析 DNS")]),t._v(" "),a("p",[t._v("源预加载是另一个性能优化技术，我们可以使用该技术来预先告知浏览器某些资源可能在将来会被使用到。\n通过 DNS 预解析来告诉浏览器未来我们可能从某个特定的 URL 获取资源，当浏览器真正使用到该域中的某个资源时就可以尽快地完成 DNS 解析。例如，我们将来可从 example.com 获取图片或音频资源，那么可以在文档顶部的 标签中加入以下内容：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//example.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("当我们从该 URL 请求一个资源时，就不再需要等待 DNS 的解析过程。该技术对使用第三方资源特别有用。通过简单的一行代码就可以告知那些兼容的浏览器进行 DNS 预解析，这意味着当浏览器真正请求该域中的某个资源时，DNS 的解析就已经完成了,从而节省了宝贵的时间。\n另外需要注意的是，浏览器会对 a 标签的 href 自动启用 DNS Prefetching，所以 a 标签里包含的域名不需要在 head 中手动设置 link。但是在 HTTPS 下不起作用，需要 meta 来强制开启功能。这个限制的原因是防止窃听者根据 DNS Prefetching 推断显示在 HTTPS 页面中超链接的主机名。下面这句话作用是强制打开 a 标签域名解析")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x-dns-prefetch-control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("h2",{attrs:{id:"页面渲染方面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面渲染方面"}},[t._v("#")]),t._v(" 页面渲染方面")]),t._v(" "),a("h3",{attrs:{id:"页面元素尽量使用事件代理-避免直接事件绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面元素尽量使用事件代理-避免直接事件绑定"}},[t._v("#")]),t._v(" 页面元素尽量使用事件代理，避免直接事件绑定：")]),t._v(" "),a("p",[t._v("使用事件代理可以避免对每个元素都进行绑定，并且可以避免出现内存泄露及需要动态添加元素的事件绑定问题，所以尽量不要直接使用事件绑定；")]),t._v(" "),a("h3",{attrs:{id:"避免各种形式重排重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避免各种形式重排重绘"}},[t._v("#")]),t._v(" 避免各种形式重排重绘：")]),t._v(" "),a("p",[t._v("页面的重排重绘很耗性能，所以一定要尽可能减少页面的重排重绘，例如页面图片大小变化，元素位置变化等这些情况都会导致重排重绘；")]),t._v(" "),a("h3",{attrs:{id:"使用-css3-动画-开启-gpu-加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-css3-动画-开启-gpu-加速"}},[t._v("#")]),t._v(" 使用 CSS3 动画，开启 GPU 加速")]),t._v(" "),a("p",[t._v("使用 CSS3 动画时可以设置 transform:translateZ(0) 来开启移动设备浏览器的 GPU 图形处理加速，让动画过程更加流畅")])])}),[],!1,null,null,null);a.default=r.exports}}]);
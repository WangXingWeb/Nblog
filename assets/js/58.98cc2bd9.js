(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{414:function(a,t,s){"use strict";s.r(t);var n=s(15),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"nan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nan"}},[a._v("#")]),a._v(" NaN")]),a._v(" "),t("p",[a._v("NaN 全称是 Not-A-Number，不是一个数字。 在 JavaScript 中，整数和浮点数都统称为 Number 类型。\nNaN 属性是代表非数字值的特殊值。该属性用于指示某个值不是数字。")]),a._v(" "),t("p",[a._v("当脚本尝试把一些非数字当做数字进行处理，却无法得到数字时，其返回值就是 NaN。比如拿一个整数乘以一个字符串，结果就是 NaN\nNaN 和任何数据比较，永远返回 false\n任何与 NaN 进行运算的结果均为 NaN\nNaN 不与任何值相等，包括自身，它属于 Number 类型")]),a._v(" "),t("p",[a._v("一旦程序中出现：NaN,肯定进行了非法的运算操作，如：alert('200px'-100);")]),a._v(" "),t("h2",{attrs:{id:"isnan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#isnan"}},[a._v("#")]),a._v(" isNaN")]),a._v(" "),t("p",[a._v("我们可以使用全局函数 isNaN()来判断一个数值是不是一个非数字（并不是用来判断是不是 NaN 这个值）\nisNaN()函数能够检测其参数是否为一个“数字”，是数字返回 false，非数字返回为 true")]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNaN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// false")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNaN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'你好'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//true")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNaN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'200'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//true   此'200'为字符串类型")]),a._v("\n")])])]),t("h2",{attrs:{id:"如何一个值是否为-nan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何一个值是否为-nan"}},[a._v("#")]),a._v(" 如何一个值是否为 NaN")]),a._v(" "),t("ul",[t("li",[a._v("方法一：将 isNaN()和 typeof 结合来判断")])]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isValueNaN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("typeof")]),a._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("===")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'number'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isNaN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("ul",[t("li",[a._v("方法二：值是否与本身不相等（NaN 是唯一有这样特征的值）")])]),a._v(" "),t("div",{staticClass:"language-javascript extra-class"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("isValueNaN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("value")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!==")]),a._v(" value\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);
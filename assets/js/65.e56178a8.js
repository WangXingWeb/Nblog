(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{420:function(t,e,a){"use strict";a.r(e);var o=a(15),r=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("![](file:///Users/xingzai/project/grideaBlog/post-images/1580648170141.jpg)")]),t._v(" "),e("h1",{attrs:{id:"创建阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建阶段"}},[t._v("#")]),t._v(" 创建阶段")]),t._v(" "),e("h2",{attrs:{id:"componentwillmount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentwillmount"}},[t._v("#")]),t._v(" componentWillMount")]),t._v(" "),e("p",[t._v("组件将要被挂载，还没有开始渲染虚拟 dom")]),t._v(" "),e("h2",{attrs:{id:"render"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#render"}},[t._v("#")]),t._v(" render")]),t._v(" "),e("p",[t._v("第一次渲染虚拟 dom，当 render 执行完，内存中就有了完整的虚拟 dom 了\n此时不能获取到页面上的 dom 元素")]),t._v(" "),e("h2",{attrs:{id:"componentdidmount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentdidmount"}},[t._v("#")]),t._v(" componentDidMount")]),t._v(" "),e("p",[t._v("组件完成了挂载，此时组件已经显示到页面上了，进入到运行状态")]),t._v(" "),e("h1",{attrs:{id:"运行阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行阶段"}},[t._v("#")]),t._v(" 运行阶段")]),t._v(" "),e("h2",{attrs:{id:"componentwillreciveprops"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentwillreciveprops"}},[t._v("#")]),t._v(" componentWillReciveProps")]),t._v(" "),e("p",[t._v("组件将要接收新属性，这要这个方法触发就证明父组件给当前自组件传递了新的属性")]),t._v(" "),e("blockquote",[e("p",[t._v("如果在这个生命周期函数中使用 this.props 拿到的还是就数据。在函数的参数 nextProps 中才是最近传入的新数据。")])]),t._v(" "),e("h2",{attrs:{id:"shouldcomponentupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shouldcomponentupdate"}},[t._v("#")]),t._v(" shouldComponentUpdate")]),t._v(" "),e("p",[t._v("组件是否需要被更新，此时组件尚未被更新，但 state 和 props 肯定是新的。")]),t._v(" "),e("blockquote",[e("p",[t._v("这里使用"),e("code",[t._v("this.state")]),t._v("和"),e("code",[t._v("this.props")]),t._v("获取到的也不是最新的数据。在函数的参数"),e("code",[t._v("nextProps")]),t._v("和"),e("code",[t._v("nextstate")]),t._v("中才是最新数据")])]),t._v(" "),e("h2",{attrs:{id:"componentwillupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentwillupdate"}},[t._v("#")]),t._v(" componentWillUpdate")]),t._v(" "),e("p",[t._v("组件将要被更新，此时尚未更新，内存中的虚拟 dom 树还是旧的")]),t._v(" "),e("h2",{attrs:{id:"render-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#render-2"}},[t._v("#")]),t._v(" render")]),t._v(" "),e("p",[t._v("使用最新的 state 和 props 重新虚拟 dom 树")]),t._v(" "),e("h2",{attrs:{id:"componentdidupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentdidupdate"}},[t._v("#")]),t._v(" componentDidupdate")]),t._v(" "),e("p",[t._v("此时页面已经被重新渲染了，state 和虚拟 dom 以及页面已经同步")]),t._v(" "),e("h1",{attrs:{id:"卸载阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卸载阶段"}},[t._v("#")]),t._v(" 卸载阶段")]),t._v(" "),e("h2",{attrs:{id:"componentwillunmount"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#componentwillunmount"}},[t._v("#")]),t._v(" componentWillUnmount")]),t._v(" "),e("p",[t._v("组件即将被卸载，此时组件还可以正常使用")])])}),[],!1,null,null,null);e.default=r.exports}}]);